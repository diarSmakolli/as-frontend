// // v1.0.4
// import React, { useState, useEffect, useCallback, useRef } from "react";
// import {
//   IconButton,
//   Flex,
//   Text,
//   HStack,
//   VStack,
//   Box,
//   Menu,
//   MenuButton,
//   MenuList,
//   MenuItem,
//   MenuDivider,
//   useColorModeValue,
//   useToast,
//   Avatar,
//   Badge,
//   Spinner,
//   Button,
//   Portal,
//   Image,
//   Input,
// } from "@chakra-ui/react";
// import {
//   FiMenu,
//   FiChevronDown,
//   FiLogOut,
//   FiCircle,
//   FiClock,
//   FiSlash,
//   FiBell,
//   FiInbox,
//   FiSmile,
// } from "react-icons/fi";
// import axios from "axios";
// import { useAuth } from "../authContext/authContext";

// const MobileNav = ({ onOpen, ...rest }) => {
//   const { account, isLoading, logout } = useAuth();
//   const toast = useToast();
//   const pickerRef = useRef(null);

//   return (
//     <React.Fragment>
//       <Flex
//         ml={{ base: 0, md: 60 }}
//         px={{ base: 4, md: 4 }}
//         height="20"
//         alignItems="center"
//         border="0"
//         borderBottomWidth="1px"
//         borderBottomColor={useColorModeValue("gray.200", "gray.700")}
//         justifyContent={{ base: "space-between", md: "flex-end" }}
//         {...rest}
//       >
//         <IconButton
//           display={{ base: "flex", md: "none" }}
//           onClick={onOpen}
//           variant="outline"
//           aria-label="open menu"
//           icon={<FiMenu />}
//         />

//         <Text
//           display={{ base: "flex", md: "none" }}
//           fontSize="md"
//           fontFamily="monospace"
//           fontWeight="bold"
//         >
//           As solutions Fourniture
//         </Text>

        {/* <HStack spacing={{ base: '0', md: '6' }}>
                    <Box position="relative">
                        <IconButton
                            icon={<FiBell size={'20px'} />}
                            aria-label="Notifications"
                            variant="ghost"
                            color="gray.500"
                            mt={'1'}
                            _hover={{ bg: 'transparent' }}
                            onClick={() => setIsNotificationsOpen(!isNotificationsOpen)}
                        />
                        {unreadCount > 0 && (
                            <Badge
                                position="absolute"
                                top="1"
                                right="1"
                                rounded='full'
                                
                            >
                                {unreadCount}
                            </Badge>
                        )}
                    </Box>

                    <Flex alignItems={'center'}>
                        <Menu>
                            <MenuButton
                                py={2}
                                transition="all 0.3s"
                                _focus={{ boxShadow: 'none' }}>
                                <HStack>
                                    <VStack
                                        display={{ base: 'none', md: 'flex' }}
                                        alignItems="flex-start"
                                        spacing="1px"
                                        ml="2">
                                        <Text fontSize="sm" color='gray.500'>
                                            {user && user.fullName}
                                        </Text>

                                        <HStack spacing={1}>
                                            {getStatusIcon()}
                                            <Text 
                                                fontSize="xs" 
                                                color="gray.400"
                                                cursor="default"
                                            >
                                                {status || 'Set a status...'}
                                            </Text>
                                        </HStack>
                                    </VStack>
                                    <Box display={{ base: 'none', md: 'flex' }}>
                                        <FiChevronDown color='gray.700' />
                                    </Box>
                                </HStack>
                            </MenuButton>

                            <MenuList bg="rgb(36, 36, 36)" borderColor="gray.700" boxShadow="2xl">
                                <MenuItem color="gray.400" bg="transparent">{user?.fullName}</MenuItem>
                                <MenuDivider />
                                <Text px={3} py={2} fontSize="xs" color="gray.500" fontWeight="medium">
                                    Status
                                </Text>
                                <Box p={3}>
                                    <Text fontSize="xs" color="gray.500" mb={2}>
                                        Custom Status
                                    </Text>
                                    <Flex
                                        bg="rgb(45, 45, 45)"
                                        p={2}
                                        borderRadius="md"
                                        position="relative"
                                    >
                                        <Input
                                            size="sm"
                                            value={customStatus}
                                            onChange={(e) => setCustomStatus(e.target.value)}
                                            onKeyDown={(e) => {
                                                if (e.key === 'Enter') {
                                                    e.preventDefault();
                                                    handleStatusUpdate();
                                                }
                                            }}
                                            placeholder="What's your status?"
                                            bg="transparent"
                                            border="none"
                                            color="gray.200"
                                            _placeholder={{ color: 'gray.500' }}
                                            _focus={{ outline: 'none' }}
                                            pr="70px"
                                        />
                                        <Flex
                                            position="absolute"
                                            right={2}
                                            top="50%"
                                            transform="translateY(-50%)"
                                            alignItems="center"
                                            gap={2}
                                        >
                                            <IconButton
                                                icon={<FiSmile />}
                                                size="sm"
                                                variant="ghost"
                                                color="gray.400"
                                                aria-label="Add emoji"
                                                onClick={() => setShowEmojiPicker(!showEmojiPicker)}
                                                _hover={{ color: 'blue.400' }}
                                            />
                                            <Button
                                                size="sm"
                                                colorScheme="blue"
                                                onClick={handleStatusUpdate}
                                                h="24px"
                                            >
                                                Set
                                            </Button>
                                        </Flex>
                                    </Flex>
                                    {showEmojiPicker && (
                                        <Box
                                            position="absolute"
                                            right="0"
                                            mt={2}
                                            zIndex={2000}
                                            bg="rgb(36, 36, 36)"
                                            borderRadius="md"
                                            boxShadow="dark-lg"
                                            border="1px solid"
                                            borderColor="gray.700"
                                        >
                                            <Picker
                                                onEmojiClick={handleEmojiClick}
                                                pickerStyle={{
                                                    boxShadow: 'none',
                                                    border: 'none',
                                                    background: 'rgb(36, 36, 36)',
                                                    width: '300px'
                                                }}
                                                theme="dark"
                                                lazyLoadEmojis={true}
                                            />
                                        </Box>
                                    )}
                                </Box>
                                
                                <MenuItem
                                    icon={<FiCircle color="green" />}
                                    onClick={() => updateStatus('Online')}
                                    bg="transparent"
                                    color="gray.400"
                                >
                                    Online
                                </MenuItem>
                                <MenuItem
                                    icon={<FiClock color="yellow" />}
                                    onClick={() => updateStatus('Away')}
                                    bg="transparent"
                                    color="gray.400"
                                >
                                    Away
                                </MenuItem>
                                <MenuItem
                                    icon={<FiSlash color="gray" />}
                                    onClick={() => updateStatus('Offline')}
                                    bg="transparent"
                                    color="gray.400"
                                >
                                    Offline
                                </MenuItem>
        
                                <MenuDivider />
                                <MenuItem icon={<FiLogOut />} onClick={logout} color="gray.500" bg="transparent" _hover={{ bg: 'gray.700' }}>
                                    Sign out
                                </MenuItem>
                            </MenuList>

                        </Menu>
                    </Flex>
                </HStack> */}
      {/* </Flex>
    </React.Fragment>
  );
};

export default MobileNav; */}